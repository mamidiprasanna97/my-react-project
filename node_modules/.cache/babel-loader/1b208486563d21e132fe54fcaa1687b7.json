{"ast":null,"code":"import _slicedToArray from\"C:/Users/Prasanna Mamidi/Desktop/Metric-Aid-Home-Project/post-api/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"C:/Users/Prasanna Mamidi/Desktop/Metric-Aid-Home-Project/post-api/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Prasanna Mamidi\\\\Desktop\\\\Metric-Aid-Home-Project\\\\post-api\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useEffect,useState}from\"react\";import List from'@mui/material/List';import ListItem from'@mui/material/ListItem';import Divider from'@mui/material/Divider';import ListItemText from'@mui/material/ListItemText';import Box from'@mui/material/Box';import CommentIcon from'@mui/icons-material/Comment';import{Typography,AppBar,CssBaseline,Grid,Container,Icon,Toolbar}from'@material-ui/core';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var fetchComments=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(postId){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(postId,\"/comments\"));case 2:response=_context.sent;return _context.abrupt(\"return\",response.json());case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchComments(_x){return _ref.apply(this,arguments);};}();function Post(_ref2){var title=_ref2.title,body=_ref2.body,postId=_ref2.postId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),comments=_useState2[0],setComments=_useState2[1];var clickHandler=function clickHandler(){fetchComments(postId).then(setComments);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:title}),/*#__PURE__*/_jsx(\"p\",{children:body}),/*#__PURE__*/_jsx(CommentIcon,{onClick:clickHandler}),comments.length&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",children:/*#__PURE__*/_jsxs(Box,{sx:{width:'100%',color:'black',bgcolor:'dark.main',boxShadow:1,borderRadius:2,p:2},children:[\"Comments:\",/*#__PURE__*/_jsx(List,{children:comments.map(function(_ref3){var id=_ref3.id,email=_ref3.email,body=_ref3.body;return/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsxs(\"dl\",{children:[/*#__PURE__*/_jsx(\"dt\",{children:/*#__PURE__*/_jsx(\"h3\",{children:email})}),/*#__PURE__*/_jsx(\"dd\",{children:body})]}),/*#__PURE__*/_jsx(Divider,{})]},id);})})]})})})]});}function Posts(){var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),posts=_useState4[0],setPosts=_useState4[1];useEffect(function(){var loadposts=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var resp,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"https://jsonplaceholder.typicode.com/posts\");case 2:resp=_context2.sent;_context2.next=5;return resp.json();case 5:data=_context2.sent;setPosts(data);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function loadposts(){return _ref4.apply(this,arguments);};}();loadposts();},[]);/* sortList = (key)=>{\n    let arrayCopy = [...this.state.posts];\n    arrayCopy.sort((a,b) => a.name[key] > b.name[key]);\n    this.setState({ posts: arrayCopy });\n   }*/return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(AppBar,{position:\"relative\",children:/*#__PURE__*/_jsx(Toolbar,{children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"Posts List\"})})}),/*#__PURE__*/_jsx(Typography,{variant:\"h2\",align:\"center\",color:\"textPrimary\",children:\"Pots\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",align:\"center\",color:\"textSecondary\",paragraph:true,children:\"Display list of Posts and associated comments!!!\"}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",children:posts.map(function(post){return/*#__PURE__*/_jsx(Box,{sx:{width:'100%',color:'black',bgcolor:'dark.main',boxShadow:2,borderRadius:2,p:2},children:/*#__PURE__*/_jsx(List,{children:/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(Post,{postId:post.id,title:post.title,body:post.body})})},post.id)});})})})]});}export default function App(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(Posts,{})});}","map":{"version":3,"sources":["C:/Users/Prasanna Mamidi/Desktop/Metric-Aid-Home-Project/post-api/src/App.js"],"names":["useEffect","useState","List","ListItem","Divider","ListItemText","Box","CommentIcon","Typography","AppBar","CssBaseline","Grid","Container","Icon","Toolbar","fetchComments","postId","fetch","response","json","Post","title","body","comments","setComments","clickHandler","then","length","width","color","bgcolor","boxShadow","borderRadius","p","map","id","email","Posts","posts","setPosts","loadposts","resp","data","post","App"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport Box from '@mui/material/Box';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { Typography, AppBar, CssBaseline, Grid, Container, Icon, Toolbar } from '@material-ui/core';\n\n  \n\n\nconst fetchComments = async (postId) => {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/posts/${postId}/comments`\n  );\n  return response.json();\n};\n\nfunction Post({ title, body, postId }) {\n  const [comments, setComments] = useState([]);\n\n  const clickHandler = () => {\n    fetchComments(postId).then(setComments);\n  };\n\n  return (\n    <div>\n      <h1 >{title}</h1>\n      <p>{body}</p>\n      <CommentIcon onClick={clickHandler}/>\n      {comments.length && (\n        <>\n           <Container maxWidth=\"md\">\n           <Box sx={{ width: '100%', color:'black', bgcolor:'dark.main', boxShadow: 1, borderRadius: 2, p: 2}} > \n          Comments:\n          <List>\n            {comments.map(({ id, email, body }) => (\n              <ListItem key={id}>\n                <dl>\n                  <dt><h3>{email}</h3></dt>\n                  <dd>{body}</dd>\n                </dl>\n                <Divider/>\n              </ListItem>\n              \n            ))}\n            \n          </List>\n          \n          </Box>\n          </Container>\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction Posts() {\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const loadposts = async () => {\n      const resp = await fetch(\n        \"https://jsonplaceholder.typicode.com/posts\"\n      );\n      const data = await resp.json();\n      setPosts(data);\n    };\n    loadposts();\n  }, []);\n\n /* sortList = (key)=>{\n    let arrayCopy = [...this.state.posts];\n    arrayCopy.sort((a,b) => a.name[key] > b.name[key]);\n    this.setState({ posts: arrayCopy });\n   }*/\n\n  return (\n          <>\n          <CssBaseline/>\n            <AppBar position ='relative'>\n            <Toolbar>\n                <Typography variant=\"h5\">Posts List</Typography>\n            </Toolbar>\n            </AppBar>\n            <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\">\n                Pots\n              </Typography>\n              <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                  Display list of Posts and associated comments!!!\n              </Typography>\n             \n        \n       \n            <main>\n            <Container maxWidth=\"md\">\n            {/*<div>\n           <button onClick={() => this.sortList()}>Sort Alphabetically</button>\n  </div>*/}\n            {posts.map((post) => (\n                   <Box sx={{ width: '100%', color:'black', bgcolor:'dark.main', boxShadow: 2, borderRadius: 2, p: 2}} > \n           <List key={post.id}>\n             <ListItem>\n                <Post postId={post.id} title={post.title} body={post.body} />\n            </ListItem>\n          </List>\n          \n          </Box>\n          \n        ))}\n      \n      </Container>\n      </main>\n    </>\n  );\n}\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Posts />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}