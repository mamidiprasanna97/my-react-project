{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prasanna Mamidi\\\\Desktop\\\\Metric-Aid-Home-Project\\\\post-api\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport Box from '@mui/material/Box';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { Typography, AppBar, CssBaseline, Grid, Container, Icon, Toolbar } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchComments = async postId => {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`);\n  return response.json();\n};\n\nfunction Post(_ref) {\n  _s();\n\n  let {\n    title,\n    body,\n    postId\n  } = _ref;\n  const [comments, setComments] = useState([]);\n\n  const clickHandler = () => {\n    fetchComments(postId).then(setComments);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentIcon, {\n      onClick: clickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), comments.length && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            color: 'black',\n            bgcolor: 'dark.main',\n            boxShadow: 1,\n            borderRadius: 2,\n            p: 2\n          },\n          children: [\"Comments:\", /*#__PURE__*/_jsxDEV(List, {\n            children: comments.map(_ref2 => {\n              let {\n                id,\n                email,\n                body\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(\"dl\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n                    children: email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                    children: body\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 17\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"RHrI29Yaf4wTXaDPqg0VDGN+Yyo=\");\n\n_c = Post;\n\nfunction Posts() {\n  _s2();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const loadposts = async () => {\n      const resp = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n      const data = await resp.json();\n      setPosts(data);\n    };\n\n    loadposts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Posts List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      align: \"center\",\n      color: \"textPrimary\",\n      children: \"Pots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      color: \"textSecondary\",\n      paragraph: true,\n      children: \"Display list of Posts and associated comments!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Filter\",\n          onChange: event => {\n            setSearchTerm(event.target.value);\n          },\n          value: \"\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), posts.filter(val => {\n          if (searchTerm == \"\") {\n            return val;\n          } else if (val.title.toLowerCase.includes(searchTerm.toLowerCase())) {\n            return val;\n          }\n        }).map(post => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            color: 'black',\n            bgcolor: 'dark.main',\n            boxShadow: 2,\n            borderRadius: 2,\n            p: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(Post, {\n                postId: post.id,\n                title: post.title,\n                body: post.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 14\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 20\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Posts, \"2QhAfAbM5WB8+JLSqL8Z8gHaJ4o=\");\n\n_c2 = Posts;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Posts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Posts\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/Prasanna Mamidi/Desktop/Metric-Aid-Home-Project/post-api/src/App.js"],"names":["useEffect","useState","List","ListItem","Divider","ListItemText","Box","CommentIcon","Typography","AppBar","CssBaseline","Grid","Container","Icon","Toolbar","fetchComments","postId","response","fetch","json","Post","title","body","comments","setComments","clickHandler","then","length","width","color","bgcolor","boxShadow","borderRadius","p","map","id","email","Posts","searchTerm","setSearchTerm","posts","setPosts","loadposts","resp","data","event","target","value","filter","val","toLowerCase","includes","post","App"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport Box from '@mui/material/Box';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { Typography, AppBar, CssBaseline, Grid, Container, Icon, Toolbar } from '@material-ui/core';\n\n\n\nconst fetchComments = async (postId) => {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/posts/${postId}/comments`\n  );\n  return response.json();\n};\n\nfunction Post({ title, body, postId }) {\n  const [comments, setComments] = useState([]);\n\n  const clickHandler = () => {\n    fetchComments(postId).then(setComments);\n  };\n\n  return (\n    <div>\n      <h1 >{title}</h1>\n      <p>{body}</p>\n      <CommentIcon onClick={clickHandler}/>\n      {comments.length && (\n        <>\n           <Container maxWidth=\"md\">\n           <Box sx={{ width: '100%', color:'black', bgcolor:'dark.main', boxShadow: 1, borderRadius: 2, p: 2}} > \n          Comments:\n          <List>\n            {comments.map(({ id, email, body }) => (\n              <ListItem key={id}>\n                <dl>\n                  <dt>{email}</dt>\n                  <dd>{body}</dd>\n                </dl>\n              </ListItem>\n              \n            ))}\n          </List>\n          <Divider/>\n          </Box>\n          </Container>\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction Posts() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const loadposts = async () => {\n      const resp = await fetch(\n        \"https://jsonplaceholder.typicode.com/posts\"\n      );\n      const data = await resp.json();\n      setPosts(data);\n    };\n    loadposts();\n  }, []);\n\n  return (\n          <>\n          <CssBaseline/>\n            <AppBar position ='relative'>\n            <Toolbar>\n                <Typography variant=\"h5\">Posts List</Typography>\n            </Toolbar>\n            </AppBar>\n            <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\">\n                Pots\n              </Typography>\n              <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                  Display list of Posts and associated comments!!!\n              </Typography>\n             \n        \n       \n            <main>\n            <Container maxWidth=\"md\">\n            <input \n            type=\"text\" \n            placeholder=\"Filter\"\n            onChange={(event)=>\n              {setSearchTerm(event.target.value);}} \n            value=''  className=\"input\" />\n            <br></br>\n            {posts.filter((val)=>{\n              if(searchTerm == \"\")\n              {\n                return val;\n              }\n              else if(val.title.toLowerCase.includes(searchTerm.toLowerCase()))\n              {\n                return val;\n              }\n            }).map((post) => (\n                   <Box sx={{ width: '100%', color:'black', bgcolor:'dark.main', boxShadow: 2, borderRadius: 2, p: 2}} > \n           <List key={post.id}>\n             <ListItem>\n                <Post postId={post.id} title={post.title} body={post.body} />\n            </ListItem>\n          </List>\n          \n          </Box>\n          \n        ))}\n      \n      </Container>\n      </main>\n    </>\n  );\n}\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Posts />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}