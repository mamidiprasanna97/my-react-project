{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prasanna Mamidi\\\\Desktop\\\\Metric-Aid-Home-Project\\\\post-api\\\\src\\\\components\\\\PostComponent.js\";\nimport React, { Component } from \"react\";\nimport { Button } from '@mui/material';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { Typography, AppBar, CssBaseline, Grid, Container, Icon, Toolbar } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PostComponent extends Component {\n  // Constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      comments: [],\n      users: []\n    };\n  } // ComponentDidMount is used to\n  // execute the code\n\n\n  componentDidMount() {\n    const fetchPosts = fetch('https://jsonplaceholder.typicode.com/posts');\n    const fetchComments = fetch('https://jsonplaceholder.typicode.com/comments');\n    const fetchUsers = fetch('https://jsonplaceholder.typicode.com/users');\n    Promise.all([fetchPosts, fetchComments, fetchUsers]).then(values => {\n      return Promise.all(values.map(r => r.json()));\n    }).then(dataJSON => this.setState({\n      posts: dataJSON[0],\n      comments: dataJSON[1],\n      users: dataJSON[2]\n    }));\n  }\n  /*fetch(\r\n      \"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n          this.setState({\r\n              items: json,\r\n              DataisLoaded: true\r\n          });\r\n      });*/\n\n\n  render() {\n    const posts = this.state.posts;\n    const comments = this.state.comments;\n    const users = this.state.users;\n    /*if (!DataisLoaded)\r\n        return <div>\r\n            <h1> Pleses wait some time....</h1> </div>;*/\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"relative\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Posts List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            align: \"center\",\n            color: \"textPrimary\",\n            children: \"Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            align: \"center\",\n            color: \"textSecondary\",\n            paragraph: true,\n            children: \"Display list of Posts and associated comments!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: posts.map(post => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  color: 'black',\n                  bgcolor: 'dark.main',\n                  boxShadow: 1,\n                  borderRadius: 2,\n                  p: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `Title: ${post.title}`,\n                  secondary: `Description: ${post.body}`,\n                  gutterbottom: \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 33\n                }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"ol\", {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    primary: `Title: ${comment.name}`,\n                    secondary: `Description: ${comment.body}`,\n                    gutterbottom: \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 41\n                  }, this)\n                }, comment.postId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)]\n            }, post.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default PostComponent;","map":{"version":3,"sources":["C:/Users/Prasanna Mamidi/Desktop/Metric-Aid-Home-Project/post-api/src/components/PostComponent.js"],"names":["React","Component","Button","List","ListItem","Divider","ListItemText","Box","Card","CardActions","CardContent","CommentIcon","Typography","AppBar","CssBaseline","Grid","Container","Icon","Toolbar","PostComponent","constructor","props","state","posts","comments","users","componentDidMount","fetchPosts","fetch","fetchComments","fetchUsers","Promise","all","then","values","map","r","json","dataJSON","setState","render","post","width","color","bgcolor","boxShadow","borderRadius","p","title","body","comment","name","postId","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\nimport { Typography, AppBar, CssBaseline, Grid, Container, Icon, Toolbar } from '@material-ui/core';\r\n\r\n\r\n\r\nclass PostComponent extends Component{\r\n        // Constructor\r\n        constructor(props)\r\n        {\r\n            super(props);\r\n\r\n            this.state = {\r\n                posts: [],\r\n                comments: [],\r\n                users: [],\r\n                \r\n            }\r\n        }\r\n        \r\n\r\n        // ComponentDidMount is used to\r\n        // execute the code\r\n        componentDidMount()\r\n        {\r\n            const fetchPosts = fetch('https://jsonplaceholder.typicode.com/posts'); \r\n            const fetchComments = fetch('https://jsonplaceholder.typicode.com/comments');\r\n            const fetchUsers = fetch('https://jsonplaceholder.typicode.com/users');\r\n\r\n            \r\n            Promise.all([fetchPosts, fetchComments, fetchUsers]).then(values => {\r\n                   \r\n                    return Promise.all(values.map(r => r.json()));\r\n            }).then(dataJSON => this.setState({\r\n                posts: dataJSON[0],\r\n                comments: dataJSON[1],\r\n                users: dataJSON[2]\r\n\r\n              }))\r\n        }\r\n\r\n            \r\n            \r\n\r\n            /*fetch(\r\n                \"https://jsonplaceholder.typicode.com/posts\")\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    this.setState({\r\n                        items: json,\r\n                        DataisLoaded: true\r\n                    });\r\n                });*/\r\n            \r\n            \r\n        render() {\r\n            const posts = this.state.posts;\r\n            const comments = this.state.comments;\r\n            const users = this.state.users;\r\n\r\n\r\n            /*if (!DataisLoaded)\r\n                return <div>\r\n                    <h1> Pleses wait some time....</h1> </div>;*/\r\n\r\n            return (\r\n                <div>\r\n                  \r\n                    <CssBaseline/>\r\n                        <AppBar position ='relative'>\r\n                        <Toolbar>\r\n                            <Typography variant=\"h5\">Posts List</Typography>\r\n                        </Toolbar>\r\n                        </AppBar>\r\n                        <main>\r\n                        <Container maxWidth=\"md\">\r\n                            <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\">\r\n                                Posts\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                            Display list of Posts and associated comments!!!\r\n                            </Typography>\r\n                            \r\n                           \r\n                                \r\n                            <List>\r\n                            {posts.map((post) => (\r\n                            <ListItem  key={post.id}>\r\n                                <Box sx={{ width: '100%', color:'black', bgcolor:'dark.main', boxShadow: 1, borderRadius: 2, p: 2}} > \r\n                                <ListItemText primary={ `Title: ${post.title}`} secondary={`Description: ${post.body}`} gutterbottom = \"true\"/>\r\n                                {/*<CommentIcon><a href=\"CommentComponent.js\"></a></CommentIcon>*/}\r\n                                    {comments.map((comment) => (\r\n                                        <ol  key={comment.postId}>\r\n                                        <li primary={ `Title: ${comment.name}`} secondary={`Description: ${comment.body}`} gutterbottom = \"true\"></li>\r\n                                        </ol>\r\n                                    ))}\r\n                                </Box>\r\n                                <Divider />\r\n                            </ListItem>\r\n                            ))}\r\n\r\n                            \r\n                            \r\n                            </List>\r\n                            \r\n                            \r\n                            \r\n                        </Container>\r\n                        </main>\r\n                    \r\n\r\n\r\n                </div>\r\n            );\r\n\r\n        }\r\n    }\r\n\r\n  export default PostComponent;"]},"metadata":{},"sourceType":"module"}